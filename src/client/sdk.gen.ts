// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options as ClientOptions,
  type TDataShape,
  type Client,
  formDataBodySerializer,
} from "@hey-api/client-fetch";
import type {
  GetActivitiesData,
  GetActivitiesResponse,
  GetActivitiesByIdData,
  GetActivitiesByIdResponse,
  GetActivitiesPageData,
  GetActivitiesPageResponse,
  GetAdminCustomFieldSettingsBundlesBuildData,
  GetAdminCustomFieldSettingsBundlesBuildResponse,
  PostAdminCustomFieldSettingsBundlesBuildData,
  PostAdminCustomFieldSettingsBundlesBuildResponse,
  DeleteAdminCustomFieldSettingsBundlesBuildByIdData,
  GetAdminCustomFieldSettingsBundlesBuildByIdData,
  GetAdminCustomFieldSettingsBundlesBuildByIdResponse,
  PostAdminCustomFieldSettingsBundlesBuildByIdData,
  PostAdminCustomFieldSettingsBundlesBuildByIdResponse,
  GetAdminCustomFieldSettingsBundlesBuildByIdValuesData,
  GetAdminCustomFieldSettingsBundlesBuildByIdValuesResponse,
  PostAdminCustomFieldSettingsBundlesBuildByIdValuesData,
  PostAdminCustomFieldSettingsBundlesBuildByIdValuesResponse,
  DeleteAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdResponse,
  PostAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdData,
  PostAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdResponse,
  GetAdminCustomFieldSettingsBundlesEnumData,
  GetAdminCustomFieldSettingsBundlesEnumResponse,
  PostAdminCustomFieldSettingsBundlesEnumData,
  PostAdminCustomFieldSettingsBundlesEnumResponse,
  DeleteAdminCustomFieldSettingsBundlesEnumByIdData,
  GetAdminCustomFieldSettingsBundlesEnumByIdData,
  GetAdminCustomFieldSettingsBundlesEnumByIdResponse,
  PostAdminCustomFieldSettingsBundlesEnumByIdData,
  PostAdminCustomFieldSettingsBundlesEnumByIdResponse,
  GetAdminCustomFieldSettingsBundlesEnumByIdValuesData,
  GetAdminCustomFieldSettingsBundlesEnumByIdValuesResponse,
  PostAdminCustomFieldSettingsBundlesEnumByIdValuesData,
  PostAdminCustomFieldSettingsBundlesEnumByIdValuesResponse,
  DeleteAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdResponse,
  PostAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdData,
  PostAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdResponse,
  GetAdminCustomFieldSettingsBundlesOwnedFieldData,
  GetAdminCustomFieldSettingsBundlesOwnedFieldResponse,
  PostAdminCustomFieldSettingsBundlesOwnedFieldData,
  PostAdminCustomFieldSettingsBundlesOwnedFieldResponse,
  DeleteAdminCustomFieldSettingsBundlesOwnedFieldByIdData,
  GetAdminCustomFieldSettingsBundlesOwnedFieldByIdData,
  GetAdminCustomFieldSettingsBundlesOwnedFieldByIdResponse,
  PostAdminCustomFieldSettingsBundlesOwnedFieldByIdData,
  PostAdminCustomFieldSettingsBundlesOwnedFieldByIdResponse,
  GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesData,
  GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesResponse,
  PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesData,
  PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesResponse,
  DeleteAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdResponse,
  PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdData,
  PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdResponse,
  GetAdminCustomFieldSettingsBundlesStateData,
  GetAdminCustomFieldSettingsBundlesStateResponse,
  PostAdminCustomFieldSettingsBundlesStateData,
  PostAdminCustomFieldSettingsBundlesStateResponse,
  DeleteAdminCustomFieldSettingsBundlesStateByIdData,
  GetAdminCustomFieldSettingsBundlesStateByIdData,
  GetAdminCustomFieldSettingsBundlesStateByIdResponse,
  PostAdminCustomFieldSettingsBundlesStateByIdData,
  PostAdminCustomFieldSettingsBundlesStateByIdResponse,
  GetAdminCustomFieldSettingsBundlesStateByIdValuesData,
  GetAdminCustomFieldSettingsBundlesStateByIdValuesResponse,
  PostAdminCustomFieldSettingsBundlesStateByIdValuesData,
  PostAdminCustomFieldSettingsBundlesStateByIdValuesResponse,
  DeleteAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdResponse,
  PostAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdData,
  PostAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdResponse,
  GetAdminCustomFieldSettingsBundlesUserData,
  GetAdminCustomFieldSettingsBundlesUserResponse,
  PostAdminCustomFieldSettingsBundlesUserData,
  PostAdminCustomFieldSettingsBundlesUserResponse,
  DeleteAdminCustomFieldSettingsBundlesUserByIdData,
  GetAdminCustomFieldSettingsBundlesUserByIdData,
  GetAdminCustomFieldSettingsBundlesUserByIdResponse,
  PostAdminCustomFieldSettingsBundlesUserByIdData,
  PostAdminCustomFieldSettingsBundlesUserByIdResponse,
  GetAdminCustomFieldSettingsBundlesUserByIdAggregatedUsersData,
  GetAdminCustomFieldSettingsBundlesUserByIdAggregatedUsersResponse,
  GetAdminCustomFieldSettingsBundlesUserByIdGroupsData,
  GetAdminCustomFieldSettingsBundlesUserByIdGroupsResponse,
  PostAdminCustomFieldSettingsBundlesUserByIdGroupsData,
  PostAdminCustomFieldSettingsBundlesUserByIdGroupsResponse,
  DeleteAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupIdData,
  GetAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupIdData,
  GetAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupIdResponse,
  GetAdminCustomFieldSettingsBundlesUserByIdIndividualsData,
  GetAdminCustomFieldSettingsBundlesUserByIdIndividualsResponse,
  PostAdminCustomFieldSettingsBundlesUserByIdIndividualsData,
  PostAdminCustomFieldSettingsBundlesUserByIdIndividualsResponse,
  DeleteAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserIdData,
  GetAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserIdData,
  GetAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserIdResponse,
  GetAdminCustomFieldSettingsBundlesVersionData,
  GetAdminCustomFieldSettingsBundlesVersionResponse,
  PostAdminCustomFieldSettingsBundlesVersionData,
  PostAdminCustomFieldSettingsBundlesVersionResponse,
  DeleteAdminCustomFieldSettingsBundlesVersionByIdData,
  GetAdminCustomFieldSettingsBundlesVersionByIdData,
  GetAdminCustomFieldSettingsBundlesVersionByIdResponse,
  PostAdminCustomFieldSettingsBundlesVersionByIdData,
  PostAdminCustomFieldSettingsBundlesVersionByIdResponse,
  GetAdminCustomFieldSettingsBundlesVersionByIdValuesData,
  GetAdminCustomFieldSettingsBundlesVersionByIdValuesResponse,
  PostAdminCustomFieldSettingsBundlesVersionByIdValuesData,
  PostAdminCustomFieldSettingsBundlesVersionByIdValuesResponse,
  DeleteAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdData,
  GetAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdResponse,
  PostAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdData,
  PostAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdResponse,
  GetAdminCustomFieldSettingsCustomFieldsData,
  GetAdminCustomFieldSettingsCustomFieldsResponse,
  PostAdminCustomFieldSettingsCustomFieldsData,
  PostAdminCustomFieldSettingsCustomFieldsResponse,
  DeleteAdminCustomFieldSettingsCustomFieldsByIdData,
  GetAdminCustomFieldSettingsCustomFieldsByIdData,
  GetAdminCustomFieldSettingsCustomFieldsByIdResponse,
  PostAdminCustomFieldSettingsCustomFieldsByIdData,
  PostAdminCustomFieldSettingsCustomFieldsByIdResponse,
  GetAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsData,
  GetAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsResponse,
  PostAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsData,
  PostAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsResponse,
  GetAdminCustomFieldSettingsCustomFieldsByIdInstancesData,
  GetAdminCustomFieldSettingsCustomFieldsByIdInstancesResponse,
  GetAdminCustomFieldSettingsTypesData,
  GetAdminCustomFieldSettingsTypesResponse,
  GetAdminDatabaseBackupBackupsData,
  GetAdminDatabaseBackupBackupsResponse,
  GetAdminDatabaseBackupBackupsByIdData,
  GetAdminDatabaseBackupBackupsByIdResponse,
  GetAdminDatabaseBackupSettingsData,
  GetAdminDatabaseBackupSettingsResponse,
  PostAdminDatabaseBackupSettingsData,
  PostAdminDatabaseBackupSettingsResponse,
  GetAdminDatabaseBackupSettingsBackupStatusData,
  GetAdminDatabaseBackupSettingsBackupStatusResponse,
  GetAdminGlobalSettingsData,
  GetAdminGlobalSettingsResponse,
  PostAdminGlobalSettingsData,
  PostAdminGlobalSettingsResponse,
  GetAdminGlobalSettingsAppearanceSettingsData,
  GetAdminGlobalSettingsAppearanceSettingsResponse,
  PostAdminGlobalSettingsAppearanceSettingsData,
  PostAdminGlobalSettingsAppearanceSettingsResponse,
  GetAdminGlobalSettingsLicenseData,
  GetAdminGlobalSettingsLicenseResponse,
  PostAdminGlobalSettingsLicenseData,
  PostAdminGlobalSettingsLicenseResponse,
  GetAdminGlobalSettingsLocaleSettingsData,
  GetAdminGlobalSettingsLocaleSettingsResponse,
  PostAdminGlobalSettingsLocaleSettingsData,
  PostAdminGlobalSettingsLocaleSettingsResponse,
  GetAdminGlobalSettingsNotificationSettingsData,
  GetAdminGlobalSettingsNotificationSettingsResponse,
  PostAdminGlobalSettingsNotificationSettingsData,
  PostAdminGlobalSettingsNotificationSettingsResponse,
  GetAdminGlobalSettingsRestSettingsData,
  GetAdminGlobalSettingsRestSettingsResponse,
  PostAdminGlobalSettingsRestSettingsData,
  PostAdminGlobalSettingsRestSettingsResponse,
  GetAdminGlobalSettingsSystemSettingsData,
  GetAdminGlobalSettingsSystemSettingsResponse,
  PostAdminGlobalSettingsSystemSettingsData,
  PostAdminGlobalSettingsSystemSettingsResponse,
  GetAdminProjectsData,
  GetAdminProjectsResponse,
  PostAdminProjectsData,
  PostAdminProjectsResponse,
  DeleteAdminProjectsByIdData,
  GetAdminProjectsByIdData,
  GetAdminProjectsByIdResponse,
  PostAdminProjectsByIdData,
  PostAdminProjectsByIdResponse,
  GetAdminProjectsByIdArticlesData,
  GetAdminProjectsByIdArticlesResponse,
  GetAdminProjectsByIdCustomFieldsData,
  GetAdminProjectsByIdCustomFieldsResponse,
  PostAdminProjectsByIdCustomFieldsData,
  PostAdminProjectsByIdCustomFieldsResponse,
  DeleteAdminProjectsByIdCustomFieldsByProjectCustomFieldIdData,
  GetAdminProjectsByIdCustomFieldsByProjectCustomFieldIdData,
  GetAdminProjectsByIdCustomFieldsByProjectCustomFieldIdResponse,
  PostAdminProjectsByIdCustomFieldsByProjectCustomFieldIdData,
  PostAdminProjectsByIdCustomFieldsByProjectCustomFieldIdResponse,
  GetAdminProjectsByIdIssuesData,
  GetAdminProjectsByIdIssuesResponse,
  PostAdminProjectsByIdIssuesData,
  PostAdminProjectsByIdIssuesResponse,
  DeleteAdminProjectsByIdIssuesByIssueIdData,
  GetAdminProjectsByIdIssuesByIssueIdData,
  GetAdminProjectsByIdIssuesByIssueIdResponse,
  PostAdminProjectsByIdIssuesByIssueIdData,
  PostAdminProjectsByIdIssuesByIssueIdResponse,
  GetAdminProjectsByIdTimeTrackingSettingsData,
  GetAdminProjectsByIdTimeTrackingSettingsResponse,
  PostAdminProjectsByIdTimeTrackingSettingsData,
  PostAdminProjectsByIdTimeTrackingSettingsResponse,
  GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesData,
  GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesResponse,
  PostAdminProjectsByIdTimeTrackingSettingsWorkItemTypesData,
  PostAdminProjectsByIdTimeTrackingSettingsWorkItemTypesResponse,
  DeleteAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
  GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
  GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdResponse,
  GetAdminTelemetryData,
  GetAdminTelemetryResponse,
  GetAdminTimeTrackingSettingsData,
  GetAdminTimeTrackingSettingsResponse,
  GetAdminTimeTrackingSettingsWorkItemTypesData,
  GetAdminTimeTrackingSettingsWorkItemTypesResponse,
  PostAdminTimeTrackingSettingsWorkItemTypesData,
  PostAdminTimeTrackingSettingsWorkItemTypesResponse,
  DeleteAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
  GetAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
  GetAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdResponse,
  PostAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
  PostAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdResponse,
  GetAdminTimeTrackingSettingsWorkTimeSettingsData,
  GetAdminTimeTrackingSettingsWorkTimeSettingsResponse,
  PostAdminTimeTrackingSettingsWorkTimeSettingsData,
  PostAdminTimeTrackingSettingsWorkTimeSettingsResponse,
  GetAgilesData,
  GetAgilesResponse,
  PostAgilesData,
  PostAgilesResponse,
  DeleteAgilesByIdData,
  GetAgilesByIdData,
  GetAgilesByIdResponse,
  PostAgilesByIdData,
  PostAgilesByIdResponse,
  GetAgilesByIdSprintsData,
  GetAgilesByIdSprintsResponse,
  PostAgilesByIdSprintsData,
  PostAgilesByIdSprintsResponse,
  DeleteAgilesByIdSprintsBySprintIdData,
  GetAgilesByIdSprintsBySprintIdData,
  GetAgilesByIdSprintsBySprintIdResponse,
  PostAgilesByIdSprintsBySprintIdData,
  PostAgilesByIdSprintsBySprintIdResponse,
  GetArticlesData,
  GetArticlesResponse,
  PostArticlesData,
  PostArticlesResponse,
  DeleteArticlesByIdData,
  GetArticlesByIdData,
  GetArticlesByIdResponse,
  PostArticlesByIdData,
  PostArticlesByIdResponse,
  GetArticlesByIdAttachmentsData,
  GetArticlesByIdAttachmentsResponse,
  PostArticlesByIdAttachmentsData,
  PostArticlesByIdAttachmentsResponse,
  DeleteArticlesByIdAttachmentsByArticleAttachmentIdData,
  GetArticlesByIdAttachmentsByArticleAttachmentIdData,
  GetArticlesByIdAttachmentsByArticleAttachmentIdResponse,
  PostArticlesByIdAttachmentsByArticleAttachmentIdData,
  PostArticlesByIdAttachmentsByArticleAttachmentIdResponse,
  GetArticlesByIdChildArticlesData,
  GetArticlesByIdChildArticlesResponse,
  PostArticlesByIdChildArticlesData,
  PostArticlesByIdChildArticlesResponse,
  DeleteArticlesByIdChildArticlesByArticleIdData,
  GetArticlesByIdChildArticlesByArticleIdData,
  GetArticlesByIdChildArticlesByArticleIdResponse,
  PostArticlesByIdChildArticlesByArticleIdData,
  PostArticlesByIdChildArticlesByArticleIdResponse,
  GetArticlesByIdCommentsData,
  GetArticlesByIdCommentsResponse,
  PostArticlesByIdCommentsData,
  PostArticlesByIdCommentsResponse,
  DeleteArticlesByIdCommentsByArticleCommentIdData,
  GetArticlesByIdCommentsByArticleCommentIdData,
  GetArticlesByIdCommentsByArticleCommentIdResponse,
  PostArticlesByIdCommentsByArticleCommentIdData,
  PostArticlesByIdCommentsByArticleCommentIdResponse,
  GetArticlesByIdCommentsByArticleCommentIdReactionsData,
  GetArticlesByIdCommentsByArticleCommentIdReactionsResponse,
  PostArticlesByIdCommentsByArticleCommentIdReactionsData,
  PostArticlesByIdCommentsByArticleCommentIdReactionsResponse,
  DeleteArticlesByIdCommentsByArticleCommentIdReactionsByReactionIdData,
  GetArticlesByIdCommentsByArticleCommentIdReactionsByReactionIdData,
  GetArticlesByIdCommentsByArticleCommentIdReactionsByReactionIdResponse,
  GetArticlesByIdParentArticleData,
  GetArticlesByIdParentArticleResponse,
  GetArticlesByIdTagsData,
  GetArticlesByIdTagsResponse,
  PostArticlesByIdTagsData,
  PostArticlesByIdTagsResponse,
  DeleteArticlesByIdTagsByTagIdData,
  GetArticlesByIdTagsByTagIdData,
  GetArticlesByIdTagsByTagIdResponse,
  PostCommandsData,
  PostCommandsResponse,
  PostCommandsAssistData,
  PostCommandsAssistResponse,
  GetGroupsData,
  GetGroupsResponse,
  GetGroupsByIdData,
  GetGroupsByIdResponse,
  GetIssueLinkTypesData,
  GetIssueLinkTypesResponse,
  PostIssueLinkTypesData,
  PostIssueLinkTypesResponse,
  DeleteIssueLinkTypesByIdData,
  GetIssueLinkTypesByIdData,
  GetIssueLinkTypesByIdResponse,
  PostIssueLinkTypesByIdData,
  PostIssueLinkTypesByIdResponse,
  GetIssuesData,
  GetIssuesResponse,
  PostIssuesData,
  PostIssuesResponse,
  DeleteIssuesByIdData,
  GetIssuesByIdData,
  GetIssuesByIdResponse,
  PostIssuesByIdData,
  PostIssuesByIdResponse,
  GetIssuesByIdActivitiesData,
  GetIssuesByIdActivitiesResponse,
  GetIssuesByIdActivitiesByActivityItemIdData,
  GetIssuesByIdActivitiesByActivityItemIdResponse,
  GetIssuesByIdActivitiesPageData,
  GetIssuesByIdActivitiesPageResponse,
  GetIssuesByIdAttachmentsData,
  GetIssuesByIdAttachmentsResponse,
  PostIssuesByIdAttachmentsData,
  PostIssuesByIdAttachmentsResponse,
  DeleteIssuesByIdAttachmentsByIssueAttachmentIdData,
  GetIssuesByIdAttachmentsByIssueAttachmentIdData,
  GetIssuesByIdAttachmentsByIssueAttachmentIdResponse,
  PostIssuesByIdAttachmentsByIssueAttachmentIdData,
  PostIssuesByIdAttachmentsByIssueAttachmentIdResponse,
  GetIssuesByIdCommentsData,
  GetIssuesByIdCommentsResponse,
  PostIssuesByIdCommentsData,
  PostIssuesByIdCommentsResponse,
  DeleteIssuesByIdCommentsByIssueCommentIdData,
  GetIssuesByIdCommentsByIssueCommentIdData,
  GetIssuesByIdCommentsByIssueCommentIdResponse,
  PostIssuesByIdCommentsByIssueCommentIdData,
  PostIssuesByIdCommentsByIssueCommentIdResponse,
  GetIssuesByIdCommentsByIssueCommentIdReactionsData,
  GetIssuesByIdCommentsByIssueCommentIdReactionsResponse,
  PostIssuesByIdCommentsByIssueCommentIdReactionsData,
  PostIssuesByIdCommentsByIssueCommentIdReactionsResponse,
  DeleteIssuesByIdCommentsByIssueCommentIdReactionsByReactionIdData,
  GetIssuesByIdCommentsByIssueCommentIdReactionsByReactionIdData,
  GetIssuesByIdCommentsByIssueCommentIdReactionsByReactionIdResponse,
  GetIssuesByIdCustomFieldsData,
  GetIssuesByIdCustomFieldsResponse,
  GetIssuesByIdCustomFieldsByIssueCustomFieldIdData,
  GetIssuesByIdCustomFieldsByIssueCustomFieldIdResponse,
  PostIssuesByIdCustomFieldsByIssueCustomFieldIdData,
  PostIssuesByIdCustomFieldsByIssueCustomFieldIdResponse,
  GetIssuesByIdLinksData,
  GetIssuesByIdLinksResponse,
  GetIssuesByIdLinksByIssueLinkIdData,
  GetIssuesByIdLinksByIssueLinkIdResponse,
  GetIssuesByIdLinksByIssueLinkIdIssuesData,
  GetIssuesByIdLinksByIssueLinkIdIssuesResponse,
  PostIssuesByIdLinksByIssueLinkIdIssuesData,
  PostIssuesByIdLinksByIssueLinkIdIssuesResponse,
  DeleteIssuesByIdLinksByIssueLinkIdIssuesByIssueIdData,
  GetIssuesByIdProjectData,
  GetIssuesByIdProjectResponse,
  PostIssuesByIdProjectData,
  PostIssuesByIdProjectResponse,
  GetIssuesByIdSprintsData,
  GetIssuesByIdSprintsResponse,
  GetIssuesByIdTagsData,
  GetIssuesByIdTagsResponse,
  PostIssuesByIdTagsData,
  PostIssuesByIdTagsResponse,
  DeleteIssuesByIdTagsByTagIdData,
  GetIssuesByIdTagsByTagIdData,
  GetIssuesByIdTagsByTagIdResponse,
  GetIssuesByIdTimeTrackingData,
  GetIssuesByIdTimeTrackingResponse,
  GetIssuesByIdTimeTrackingWorkItemsData,
  GetIssuesByIdTimeTrackingWorkItemsResponse,
  PostIssuesByIdTimeTrackingWorkItemsData,
  PostIssuesByIdTimeTrackingWorkItemsResponse,
  DeleteIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdData,
  GetIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdData,
  GetIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdResponse,
  PostIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdData,
  PostIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdResponse,
  GetIssuesByIdVcsChangesData,
  GetIssuesByIdVcsChangesResponse,
  PostIssuesByIdVcsChangesData,
  PostIssuesByIdVcsChangesResponse,
  DeleteIssuesByIdVcsChangesByVcsChangeIdData,
  GetIssuesByIdVcsChangesByVcsChangeIdData,
  GetIssuesByIdVcsChangesByVcsChangeIdResponse,
  PostIssuesByIdVcsChangesByVcsChangeIdData,
  PostIssuesByIdVcsChangesByVcsChangeIdResponse,
  PostIssuesGetterCountData,
  PostIssuesGetterCountResponse,
  GetSavedQueriesData,
  GetSavedQueriesResponse,
  PostSavedQueriesData,
  PostSavedQueriesResponse,
  DeleteSavedQueriesByIdData,
  GetSavedQueriesByIdData,
  GetSavedQueriesByIdResponse,
  PostSavedQueriesByIdData,
  PostSavedQueriesByIdResponse,
  PostSearchAssistData,
  PostSearchAssistResponse,
  GetTagsData,
  GetTagsResponse,
  PostTagsData,
  PostTagsResponse,
  DeleteTagsByIdData,
  GetTagsByIdData,
  GetTagsByIdResponse,
  PostTagsByIdData,
  PostTagsByIdResponse,
  GetTagsByIdIssuesData,
  GetTagsByIdIssuesResponse,
  GetUsersData,
  GetUsersResponse,
  GetUsersByIdData,
  GetUsersByIdResponse,
  GetUsersByIdProfilesGeneralData,
  GetUsersByIdProfilesGeneralResponse,
  PostUsersByIdProfilesGeneralData,
  PostUsersByIdProfilesGeneralResponse,
  GetUsersByIdProfilesNotificationsData,
  GetUsersByIdProfilesNotificationsResponse,
  PostUsersByIdProfilesNotificationsData,
  PostUsersByIdProfilesNotificationsResponse,
  GetUsersByIdProfilesTimetrackingData,
  GetUsersByIdProfilesTimetrackingResponse,
  PostUsersByIdProfilesTimetrackingData,
  PostUsersByIdProfilesTimetrackingResponse,
  GetUsersByIdSavedQueriesData,
  GetUsersByIdSavedQueriesResponse,
  GetUsersByIdTagsData,
  GetUsersByIdTagsResponse,
  GetUsersMeData,
  GetUsersMeResponse,
  GetWorkItemsData,
  GetWorkItemsResponse,
  GetWorkItemsByIdData,
  GetWorkItemsByIdResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * This resource provides access to the activities with the possibility to filter them by various parameters.
 */
export const getActivities = <ThrowOnError extends boolean = false>(
  options?: Options<GetActivitiesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetActivitiesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/activities",
    ...options,
  });
};

/**
 * This resource provides access to the activities with the possibility to filter them by various parameters.
 */
export const getActivitiesById = <ThrowOnError extends boolean = false>(
  options: Options<GetActivitiesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetActivitiesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/activities/{id}",
    ...options,
  });
};

/**
 * This resource provides access to issue-related activity that is wrapped inside a page object.
 * The main advantage of the page in comparison to a list of activities is cursors.
 * The page provides boundary marks that supports iteration over the activities from the place
 * the page is finished.
 */
export const getActivitiesPage = <ThrowOnError extends boolean = false>(
  options?: Options<GetActivitiesPageData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetActivitiesPageResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/activitiesPage",
    ...options,
  });
};

/**
 * This resource provides operations with sets of builds.
 */
export const getAdminCustomFieldSettingsBundlesBuild = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminCustomFieldSettingsBundlesBuildData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesBuildResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build",
    ...options,
  });
};

/**
 * This resource provides operations with sets of builds.
 */
export const postAdminCustomFieldSettingsBundlesBuild = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminCustomFieldSettingsBundlesBuildData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesBuildResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides operations with sets of builds.
 */
export const deleteAdminCustomFieldSettingsBundlesBuildById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsBundlesBuildByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with sets of builds.
 */
export const getAdminCustomFieldSettingsBundlesBuildById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesBuildByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesBuildByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with sets of builds.
 */
export const postAdminCustomFieldSettingsBundlesBuildById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesBuildByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesBuildByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of builds (build bundle).
 */
export const getAdminCustomFieldSettingsBundlesBuildByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesBuildByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesBuildByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build/{id}/values",
    ...options,
  });
};

/**
 * This resource lets you work with the values in a specific set of builds (build bundle).
 */
export const postAdminCustomFieldSettingsBundlesBuildByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesBuildByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesBuildByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/build/{id}/values",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of builds (build bundle).
 */
export const deleteAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/build/{id}/values/{buildBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of builds (build bundle).
 */
export const getAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/build/{id}/values/{buildBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of builds (build bundle).
 */
export const postAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      PostAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).post<
      PostAdminCustomFieldSettingsBundlesBuildByIdValuesByBuildBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/build/{id}/values/{buildBundleElementId}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  };

/**
 * This resource lets you work with a set of values of the `enum` type.
 */
export const getAdminCustomFieldSettingsBundlesEnum = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminCustomFieldSettingsBundlesEnumData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesEnumResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum",
    ...options,
  });
};

/**
 * This resource lets you work with a set of values of the `enum` type.
 */
export const postAdminCustomFieldSettingsBundlesEnum = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminCustomFieldSettingsBundlesEnumData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesEnumResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with a set of values of the `enum` type.
 */
export const deleteAdminCustomFieldSettingsBundlesEnumById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsBundlesEnumByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with a set of values of the `enum` type.
 */
export const getAdminCustomFieldSettingsBundlesEnumById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesEnumByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesEnumByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with a set of values of the `enum` type.
 */
export const postAdminCustomFieldSettingsBundlesEnumById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesEnumByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesEnumByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of enumerated values (enum bundle).
 */
export const getAdminCustomFieldSettingsBundlesEnumByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesEnumByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesEnumByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum/{id}/values",
    ...options,
  });
};

/**
 * This resource lets you work with the values in a specific set of enumerated values (enum bundle).
 */
export const postAdminCustomFieldSettingsBundlesEnumByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesEnumByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesEnumByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/enum/{id}/values",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of enumerated values (enum bundle).
 */
export const deleteAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/enum/{id}/values/{enumBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of enumerated values (enum bundle).
 */
export const getAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/enum/{id}/values/{enumBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of enumerated values (enum bundle).
 */
export const postAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      PostAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).post<
      PostAdminCustomFieldSettingsBundlesEnumByIdValuesByEnumBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/enum/{id}/values/{enumBundleElementId}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  };

/**
 * This resource provides operations with owned field bundles.
 */
export const getAdminCustomFieldSettingsBundlesOwnedField = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    GetAdminCustomFieldSettingsBundlesOwnedFieldData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesOwnedFieldResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField",
    ...options,
  });
};

/**
 * This resource provides operations with owned field bundles.
 */
export const postAdminCustomFieldSettingsBundlesOwnedField = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostAdminCustomFieldSettingsBundlesOwnedFieldData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesOwnedFieldResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides operations with owned field bundles.
 */
export const deleteAdminCustomFieldSettingsBundlesOwnedFieldById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsBundlesOwnedFieldByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with owned field bundles.
 */
export const getAdminCustomFieldSettingsBundlesOwnedFieldById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesOwnedFieldByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesOwnedFieldByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with owned field bundles.
 */
export const postAdminCustomFieldSettingsBundlesOwnedFieldById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesOwnedFieldByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesOwnedFieldByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of owned values (owned bundle).
 */
export const getAdminCustomFieldSettingsBundlesOwnedFieldByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField/{id}/values",
    ...options,
  });
};

/**
 * This resource lets you work with the values in a specific set of owned values (owned bundle).
 */
export const postAdminCustomFieldSettingsBundlesOwnedFieldByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/ownedField/{id}/values",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of owned values (owned bundle).
 */
export const deleteAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/ownedField/{id}/values/{ownedBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of owned values (owned bundle).
 */
export const getAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/ownedField/{id}/values/{ownedBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of owned values (owned bundle).
 */
export const postAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).post<
      PostAdminCustomFieldSettingsBundlesOwnedFieldByIdValuesByOwnedBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/ownedField/{id}/values/{ownedBundleElementId}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  };

/**
 * This resource provides operations with sets of values of the `state` type.
 */
export const getAdminCustomFieldSettingsBundlesState = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminCustomFieldSettingsBundlesStateData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesStateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state",
    ...options,
  });
};

/**
 * This resource provides operations with sets of values of the `state` type.
 */
export const postAdminCustomFieldSettingsBundlesState = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminCustomFieldSettingsBundlesStateData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesStateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides operations with sets of values of the `state` type.
 */
export const deleteAdminCustomFieldSettingsBundlesStateById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsBundlesStateByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with sets of values of the `state` type.
 */
export const getAdminCustomFieldSettingsBundlesStateById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesStateByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesStateByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with sets of values of the `state` type.
 */
export const postAdminCustomFieldSettingsBundlesStateById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesStateByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesStateByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of states (state bundle).
 */
export const getAdminCustomFieldSettingsBundlesStateByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesStateByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesStateByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state/{id}/values",
    ...options,
  });
};

/**
 * This resource lets you work with the values in a specific set of states (state bundle).
 */
export const postAdminCustomFieldSettingsBundlesStateByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesStateByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesStateByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/state/{id}/values",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the values in a specific set of states (state bundle).
 */
export const deleteAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/state/{id}/values/{stateBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of states (state bundle).
 */
export const getAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/state/{id}/values/{stateBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the values in a specific set of states (state bundle).
 */
export const postAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      PostAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).post<
      PostAdminCustomFieldSettingsBundlesStateByIdValuesByStateBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/state/{id}/values/{stateBundleElementId}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  };

/**
 * This resource lets you work with the sets of users in YouTrack.
 */
export const getAdminCustomFieldSettingsBundlesUser = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminCustomFieldSettingsBundlesUserData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user",
    ...options,
  });
};

/**
 * This resource lets you work with the sets of users in YouTrack.
 */
export const postAdminCustomFieldSettingsBundlesUser = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminCustomFieldSettingsBundlesUserData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesUserResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the sets of users in YouTrack.
 */
export const deleteAdminCustomFieldSettingsBundlesUserById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsBundlesUserByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with the sets of users in YouTrack.
 */
export const getAdminCustomFieldSettingsBundlesUserById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesUserByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with the sets of users in YouTrack.
 */
export const postAdminCustomFieldSettingsBundlesUserById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesUserByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesUserByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read the list of all users that the specific bundle contains, both that were added as members of groups and individually.
 */
export const getAdminCustomFieldSettingsBundlesUserByIdAggregatedUsers = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesUserByIdAggregatedUsersData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserByIdAggregatedUsersResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/aggregatedUsers",
    ...options,
  });
};

/**
 * This resource lets you work with the user groups that are added to the specific set of users.
 */
export const getAdminCustomFieldSettingsBundlesUserByIdGroups = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesUserByIdGroupsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserByIdGroupsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/groups",
    ...options,
  });
};

/**
 * This resource lets you work with the user groups that are added to the specific set of users.
 */
export const postAdminCustomFieldSettingsBundlesUserByIdGroups = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesUserByIdGroupsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesUserByIdGroupsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/groups",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the user groups that are added to the specific set of users.
 */
export const deleteAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/user/{id}/groups/{userGroupId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the user groups that are added to the specific set of users.
 */
export const getAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserByIdGroupsByUserGroupIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/groups/{userGroupId}",
    ...options,
  });
};

/**
 * This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).
 */
export const getAdminCustomFieldSettingsBundlesUserByIdIndividuals = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesUserByIdIndividualsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserByIdIndividualsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/individuals",
    ...options,
  });
};

/**
 * This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).
 */
export const postAdminCustomFieldSettingsBundlesUserByIdIndividuals = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesUserByIdIndividualsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesUserByIdIndividualsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/individuals",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).
 */
export const deleteAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/user/{id}/individuals/{userId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).
 */
export const getAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesUserByIdIndividualsByUserIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/user/{id}/individuals/{userId}",
    ...options,
  });
};

/**
 * This resource provides operations with version bundles.
 */
export const getAdminCustomFieldSettingsBundlesVersion = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    GetAdminCustomFieldSettingsBundlesVersionData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesVersionResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version",
    ...options,
  });
};

/**
 * This resource provides operations with version bundles.
 */
export const postAdminCustomFieldSettingsBundlesVersion = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostAdminCustomFieldSettingsBundlesVersionData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesVersionResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides operations with version bundles.
 */
export const deleteAdminCustomFieldSettingsBundlesVersionById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsBundlesVersionByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with version bundles.
 */
export const getAdminCustomFieldSettingsBundlesVersionById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesVersionByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesVersionByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with version bundles.
 */
export const postAdminCustomFieldSettingsBundlesVersionById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesVersionByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesVersionByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the version values in a specific set of versions (version bundle).
 */
export const getAdminCustomFieldSettingsBundlesVersionByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsBundlesVersionByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsBundlesVersionByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version/{id}/values",
    ...options,
  });
};

/**
 * This resource lets you work with the version values in a specific set of versions (version bundle).
 */
export const postAdminCustomFieldSettingsBundlesVersionByIdValues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsBundlesVersionByIdValuesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsBundlesVersionByIdValuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/bundles/version/{id}/values",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the version values in a specific set of versions (version bundle).
 */
export const deleteAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/version/{id}/values/{versionBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the version values in a specific set of versions (version bundle).
 */
export const getAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/version/{id}/values/{versionBundleElementId}",
      ...options,
    });
  };

/**
 * This resource lets you work with the version values in a specific set of versions (version bundle).
 */
export const postAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      PostAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).post<
      PostAdminCustomFieldSettingsBundlesVersionByIdValuesByVersionBundleElementIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/customFieldSettings/bundles/version/{id}/values/{versionBundleElementId}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  };

/**
 * This resource lets you work with the custom fields. In the old REST API we called them "prototypes".
 */
export const getAdminCustomFieldSettingsCustomFields = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminCustomFieldSettingsCustomFieldsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsCustomFieldsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields",
    ...options,
  });
};

/**
 * This resource lets you work with the custom fields. In the old REST API we called them "prototypes".
 */
export const postAdminCustomFieldSettingsCustomFields = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminCustomFieldSettingsCustomFieldsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsCustomFieldsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the custom fields. In the old REST API we called them "prototypes".
 */
export const deleteAdminCustomFieldSettingsCustomFieldsById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminCustomFieldSettingsCustomFieldsByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with the custom fields. In the old REST API we called them "prototypes".
 */
export const getAdminCustomFieldSettingsCustomFieldsById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsCustomFieldsByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsCustomFieldsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with the custom fields. In the old REST API we called them "prototypes".
 */
export const postAdminCustomFieldSettingsCustomFieldsById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsCustomFieldsByIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsCustomFieldsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read and update default settings of a custom field in a project.
 */
export const getAdminCustomFieldSettingsCustomFieldsByIdFieldDefaults = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields/{id}/fieldDefaults",
    ...options,
  });
};

/**
 * This resource lets you read and update default settings of a custom field in a project.
 */
export const postAdminCustomFieldSettingsCustomFieldsByIdFieldDefaults = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminCustomFieldSettingsCustomFieldsByIdFieldDefaultsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields/{id}/fieldDefaults",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read a so called instances of the custom fields - settings of the custom field in each project that uses it.
 */
export const getAdminCustomFieldSettingsCustomFieldsByIdInstances = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminCustomFieldSettingsCustomFieldsByIdInstancesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsCustomFieldsByIdInstancesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/customFields/{id}/instances",
    ...options,
  });
};

/**
 * This resource lets you read the list of supported types of custom fields in YouTrack.
 */
export const getAdminCustomFieldSettingsTypes = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminCustomFieldSettingsTypesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminCustomFieldSettingsTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/customFieldSettings/types",
    ...options,
  });
};

/**
 * This resource lets you access the database backup files. The user account that performs the operation
 * must have <emphasis>Low-level Read Administration</emphasis> permissions.
 */
export const getAdminDatabaseBackupBackups = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminDatabaseBackupBackupsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminDatabaseBackupBackupsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/databaseBackup/backups",
    ...options,
  });
};

/**
 * This resource lets you access the database backup files. The user account that performs the operation
 * must have <emphasis>Low-level Read Administration</emphasis> permissions.
 */
export const getAdminDatabaseBackupBackupsById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAdminDatabaseBackupBackupsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminDatabaseBackupBackupsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/databaseBackup/backups/{id}",
    ...options,
  });
};

/**
 * This resource lets you configure settings of the database backup.
 */
export const getAdminDatabaseBackupSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminDatabaseBackupSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminDatabaseBackupSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/databaseBackup/settings",
    ...options,
  });
};

/**
 * This resource lets you configure settings of the database backup.
 */
export const postAdminDatabaseBackupSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminDatabaseBackupSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminDatabaseBackupSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/databaseBackup/settings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you get the status of the back up process.
 */
export const getAdminDatabaseBackupSettingsBackupStatus = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    GetAdminDatabaseBackupSettingsBackupStatusData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminDatabaseBackupSettingsBackupStatusResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/databaseBackup/settings/backupStatus",
    ...options,
  });
};

/**
 * Provides operations with global application settings.
 */
export const getAdminGlobalSettings = <ThrowOnError extends boolean = false>(
  options?: Options<GetAdminGlobalSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings",
    ...options,
  });
};

/**
 * Provides operations with global application settings.
 */
export const postAdminGlobalSettings = <ThrowOnError extends boolean = false>(
  options?: Options<PostAdminGlobalSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the Visual settings of your YouTrack service.
 */
export const getAdminGlobalSettingsAppearanceSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminGlobalSettingsAppearanceSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsAppearanceSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/appearanceSettings",
    ...options,
  });
};

/**
 * This resource lets you work with the Visual settings of your YouTrack service.
 */
export const postAdminGlobalSettingsAppearanceSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostAdminGlobalSettingsAppearanceSettingsData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsAppearanceSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/appearanceSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the license of your YouTrack service.
 */
export const getAdminGlobalSettingsLicense = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminGlobalSettingsLicenseData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsLicenseResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/license",
    ...options,
  });
};

/**
 * This resource lets you work with the license of your YouTrack service.
 */
export const postAdminGlobalSettingsLicense = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminGlobalSettingsLicenseData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsLicenseResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/license",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the system language settings of your YouTrack service.
 */
export const getAdminGlobalSettingsLocaleSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminGlobalSettingsLocaleSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsLocaleSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/localeSettings",
    ...options,
  });
};

/**
 * This resource lets you work with the system language settings of your YouTrack service.
 */
export const postAdminGlobalSettingsLocaleSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminGlobalSettingsLocaleSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsLocaleSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/localeSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the notification settings of your YouTrack service: read and configure Email server settings to enable notifications to users.
 */
export const getAdminGlobalSettingsNotificationSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    GetAdminGlobalSettingsNotificationSettingsData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsNotificationSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/notificationSettings",
    ...options,
  });
};

/**
 * This resource lets you work with the notification settings of your YouTrack service: read and configure Email server settings to enable notifications to users.
 */
export const postAdminGlobalSettingsNotificationSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostAdminGlobalSettingsNotificationSettingsData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsNotificationSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/notificationSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the Resource Sharing settings of your YouTrack service.
 */
export const getAdminGlobalSettingsRestSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminGlobalSettingsRestSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsRestSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/restSettings",
    ...options,
  });
};

/**
 * This resource lets you work with the Resource Sharing settings of your YouTrack service.
 */
export const postAdminGlobalSettingsRestSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminGlobalSettingsRestSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsRestSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/restSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the System settings of your YouTrack service.
 */
export const getAdminGlobalSettingsSystemSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminGlobalSettingsSystemSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminGlobalSettingsSystemSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/systemSettings",
    ...options,
  });
};

/**
 * This resource lets you work with the System settings of your YouTrack service.
 */
export const postAdminGlobalSettingsSystemSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostAdminGlobalSettingsSystemSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminGlobalSettingsSystemSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/globalSettings/systemSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides access to projects.
 */
export const getAdminProjects = <ThrowOnError extends boolean = false>(
  options?: Options<GetAdminProjectsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminProjectsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects",
    ...options,
  });
};

/**
 * This resource provides access to projects.
 */
export const postAdminProjects = <ThrowOnError extends boolean = false>(
  options?: Options<PostAdminProjectsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminProjectsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides access to projects.
 */
export const deleteAdminProjectsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteAdminProjectsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}",
    ...options,
  });
};

/**
 * This resource provides access to projects.
 */
export const getAdminProjectsById = <ThrowOnError extends boolean = false>(
  options: Options<GetAdminProjectsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}",
    ...options,
  });
};

/**
 * This resource provides access to projects.
 */
export const postAdminProjectsById = <ThrowOnError extends boolean = false>(
  options: Options<PostAdminProjectsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with articles that belong to the project.
 */
export const getAdminProjectsByIdArticles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAdminProjectsByIdArticlesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdArticlesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/articles",
    ...options,
  });
};

/**
 * This resource lets you access and configure custom fields in the specific project.
 */
export const getAdminProjectsByIdCustomFields = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAdminProjectsByIdCustomFieldsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdCustomFieldsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/customFields",
    ...options,
  });
};

/**
 * This resource lets you access and configure custom fields in the specific project.
 */
export const postAdminProjectsByIdCustomFields = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostAdminProjectsByIdCustomFieldsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdCustomFieldsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/customFields",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access and configure custom fields in the specific project.
 */
export const deleteAdminProjectsByIdCustomFieldsByProjectCustomFieldId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminProjectsByIdCustomFieldsByProjectCustomFieldIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/customFields/{projectCustomFieldId}",
    ...options,
  });
};

/**
 * This resource lets you access and configure custom fields in the specific project.
 */
export const getAdminProjectsByIdCustomFieldsByProjectCustomFieldId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminProjectsByIdCustomFieldsByProjectCustomFieldIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdCustomFieldsByProjectCustomFieldIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/customFields/{projectCustomFieldId}",
    ...options,
  });
};

/**
 * This resource lets you access and configure custom fields in the specific project.
 */
export const postAdminProjectsByIdCustomFieldsByProjectCustomFieldId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminProjectsByIdCustomFieldsByProjectCustomFieldIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdCustomFieldsByProjectCustomFieldIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/customFields/{projectCustomFieldId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with issues within the particular project.
 */
export const getAdminProjectsByIdIssues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAdminProjectsByIdIssuesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/issues",
    ...options,
  });
};

/**
 * This resource lets you work with issues within the particular project.
 */
export const postAdminProjectsByIdIssues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostAdminProjectsByIdIssuesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/issues",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with issues within the particular project.
 */
export const deleteAdminProjectsByIdIssuesByIssueId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteAdminProjectsByIdIssuesByIssueIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/issues/{issueId}",
    ...options,
  });
};

/**
 * This resource lets you work with issues within the particular project.
 */
export const getAdminProjectsByIdIssuesByIssueId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAdminProjectsByIdIssuesByIssueIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdIssuesByIssueIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/issues/{issueId}",
    ...options,
  });
};

/**
 * This resource lets you work with issues within the particular project.
 */
export const postAdminProjectsByIdIssuesByIssueId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostAdminProjectsByIdIssuesByIssueIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdIssuesByIssueIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/issues/{issueId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you configure the time tracking settings for the specific project.
 */
export const getAdminProjectsByIdTimeTrackingSettings = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAdminProjectsByIdTimeTrackingSettingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdTimeTrackingSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/timeTrackingSettings",
    ...options,
  });
};

/**
 * This resource lets you configure the time tracking settings for the specific project.
 */
export const postAdminProjectsByIdTimeTrackingSettings = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostAdminProjectsByIdTimeTrackingSettingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdTimeTrackingSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/timeTrackingSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you configure work item types of the project.
 */
export const getAdminProjectsByIdTimeTrackingSettingsWorkItemTypes = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/timeTrackingSettings/workItemTypes",
    ...options,
  });
};

/**
 * This resource lets you configure work item types of the project.
 */
export const postAdminProjectsByIdTimeTrackingSettingsWorkItemTypes = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminProjectsByIdTimeTrackingSettingsWorkItemTypesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminProjectsByIdTimeTrackingSettingsWorkItemTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/projects/{id}/timeTrackingSettings/workItemTypes",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you configure work item types of the project.
 */
export const deleteAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/projects/{id}/timeTrackingSettings/workItemTypes/{workItemTypeId}",
      ...options,
    });
  };

/**
 * This resource lets you configure work item types of the project.
 */
export const getAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetAdminProjectsByIdTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/admin/projects/{id}/timeTrackingSettings/workItemTypes/{workItemTypeId}",
      ...options,
    });
  };

/**
 * This resource lets you get telemetry data of your YouTrack service.
 */
export const getAdminTelemetry = <ThrowOnError extends boolean = false>(
  options?: Options<GetAdminTelemetryData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminTelemetryResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/telemetry",
    ...options,
  });
};

/**
 * This resource lets you configure system-wide time tracking settings.
 */
export const getAdminTimeTrackingSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetAdminTimeTrackingSettingsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminTimeTrackingSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings",
    ...options,
  });
};

/**
 * This resource lets you read, update, and delete types of work items.
 */
export const getAdminTimeTrackingSettingsWorkItemTypes = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    GetAdminTimeTrackingSettingsWorkItemTypesData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminTimeTrackingSettingsWorkItemTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workItemTypes",
    ...options,
  });
};

/**
 * This resource lets you read, update, and delete types of work items.
 */
export const postAdminTimeTrackingSettingsWorkItemTypes = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostAdminTimeTrackingSettingsWorkItemTypesData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminTimeTrackingSettingsWorkItemTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workItemTypes",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read, update, and delete types of work items.
 */
export const deleteAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}",
    ...options,
  });
};

/**
 * This resource lets you read, update, and delete types of work items.
 */
export const getAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}",
    ...options,
  });
};

/**
 * This resource lets you read, update, and delete types of work items.
 */
export const postAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAdminTimeTrackingSettingsWorkItemTypesByWorkItemTypeIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you configure the system-wide work time settings.
 */
export const getAdminTimeTrackingSettingsWorkTimeSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    GetAdminTimeTrackingSettingsWorkTimeSettingsData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAdminTimeTrackingSettingsWorkTimeSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workTimeSettings",
    ...options,
  });
};

/**
 * This resource lets you configure the system-wide work time settings.
 */
export const postAdminTimeTrackingSettingsWorkTimeSettings = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostAdminTimeTrackingSettingsWorkTimeSettingsData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAdminTimeTrackingSettingsWorkTimeSettingsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/admin/timeTrackingSettings/workTimeSettings",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with agile boards in YouTrack using the REST API.
 */
export const getAgiles = <ThrowOnError extends boolean = false>(
  options?: Options<GetAgilesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAgilesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles",
    ...options,
  });
};

/**
 * This resource lets you work with agile boards in YouTrack using the REST API.
 */
export const postAgiles = <ThrowOnError extends boolean = false>(
  options?: Options<PostAgilesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostAgilesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with agile boards in YouTrack using the REST API.
 */
export const deleteAgilesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteAgilesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with agile boards in YouTrack using the REST API.
 */
export const getAgilesById = <ThrowOnError extends boolean = false>(
  options: Options<GetAgilesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAgilesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}",
    ...options,
  });
};

/**
 * This resource lets you work with agile boards in YouTrack using the REST API.
 */
export const postAgilesById = <ThrowOnError extends boolean = false>(
  options: Options<PostAgilesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAgilesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with sprints of the specific agile board.
 */
export const getAgilesByIdSprints = <ThrowOnError extends boolean = false>(
  options: Options<GetAgilesByIdSprintsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAgilesByIdSprintsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}/sprints",
    ...options,
  });
};

/**
 * This resource lets you work with sprints of the specific agile board.
 */
export const postAgilesByIdSprints = <ThrowOnError extends boolean = false>(
  options: Options<PostAgilesByIdSprintsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAgilesByIdSprintsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}/sprints",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with sprints of the specific agile board.
 */
export const deleteAgilesByIdSprintsBySprintId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteAgilesByIdSprintsBySprintIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}/sprints/{sprintId}",
    ...options,
  });
};

/**
 * This resource lets you work with sprints of the specific agile board.
 */
export const getAgilesByIdSprintsBySprintId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAgilesByIdSprintsBySprintIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAgilesByIdSprintsBySprintIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}/sprints/{sprintId}",
    ...options,
  });
};

/**
 * This resource lets you work with sprints of the specific agile board.
 */
export const postAgilesByIdSprintsBySprintId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostAgilesByIdSprintsBySprintIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostAgilesByIdSprintsBySprintIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/agiles/{id}/sprints/{sprintId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access articles in the YouTrack knowledge base.
 */
export const getArticles = <ThrowOnError extends boolean = false>(
  options?: Options<GetArticlesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetArticlesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles",
    ...options,
  });
};

/**
 * This resource lets you access articles in the YouTrack knowledge base.
 */
export const postArticles = <ThrowOnError extends boolean = false>(
  options?: Options<PostArticlesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostArticlesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access articles in the YouTrack knowledge base.
 */
export const deleteArticlesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteArticlesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}",
    ...options,
  });
};

/**
 * This resource lets you access articles in the YouTrack knowledge base.
 */
export const getArticlesById = <ThrowOnError extends boolean = false>(
  options: Options<GetArticlesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}",
    ...options,
  });
};

/**
 * This resource lets you access articles in the YouTrack knowledge base.
 */
export const postArticlesById = <ThrowOnError extends boolean = false>(
  options: Options<PostArticlesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with attachments in a specific article.
 */
export const getArticlesByIdAttachments = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetArticlesByIdAttachmentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdAttachmentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/attachments",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in a specific article.
 */
export const postArticlesByIdAttachments = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostArticlesByIdAttachmentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdAttachmentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/attachments",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with attachments in a specific article.
 */
export const deleteArticlesByIdAttachmentsByArticleAttachmentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteArticlesByIdAttachmentsByArticleAttachmentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/attachments/{articleAttachmentId}",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in a specific article.
 */
export const getArticlesByIdAttachmentsByArticleAttachmentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetArticlesByIdAttachmentsByArticleAttachmentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdAttachmentsByArticleAttachmentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/attachments/{articleAttachmentId}",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in a specific article.
 */
export const postArticlesByIdAttachmentsByArticleAttachmentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostArticlesByIdAttachmentsByArticleAttachmentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdAttachmentsByArticleAttachmentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/attachments/{articleAttachmentId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the sub-articles of the current article.
 */
export const getArticlesByIdChildArticles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetArticlesByIdChildArticlesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdChildArticlesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/childArticles",
    ...options,
  });
};

/**
 * This resource lets you work with the sub-articles of the current article.
 */
export const postArticlesByIdChildArticles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostArticlesByIdChildArticlesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdChildArticlesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/childArticles",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the sub-articles of the current article.
 */
export const deleteArticlesByIdChildArticlesByArticleId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteArticlesByIdChildArticlesByArticleIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/childArticles/{articleId}",
    ...options,
  });
};

/**
 * This resource lets you work with the sub-articles of the current article.
 */
export const getArticlesByIdChildArticlesByArticleId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetArticlesByIdChildArticlesByArticleIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdChildArticlesByArticleIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/childArticles/{articleId}",
    ...options,
  });
};

/**
 * This resource lets you work with the sub-articles of the current article.
 */
export const postArticlesByIdChildArticlesByArticleId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostArticlesByIdChildArticlesByArticleIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdChildArticlesByArticleIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/childArticles/{articleId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with comments to an article.
 */
export const getArticlesByIdComments = <ThrowOnError extends boolean = false>(
  options: Options<GetArticlesByIdCommentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdCommentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments",
    ...options,
  });
};

/**
 * This resource lets you work with comments to an article.
 */
export const postArticlesByIdComments = <ThrowOnError extends boolean = false>(
  options: Options<PostArticlesByIdCommentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdCommentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with comments to an article.
 */
export const deleteArticlesByIdCommentsByArticleCommentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteArticlesByIdCommentsByArticleCommentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments/{articleCommentId}",
    ...options,
  });
};

/**
 * This resource lets you work with comments to an article.
 */
export const getArticlesByIdCommentsByArticleCommentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetArticlesByIdCommentsByArticleCommentIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdCommentsByArticleCommentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments/{articleCommentId}",
    ...options,
  });
};

/**
 * This resource lets you work with comments to an article.
 */
export const postArticlesByIdCommentsByArticleCommentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostArticlesByIdCommentsByArticleCommentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdCommentsByArticleCommentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments/{articleCommentId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with reactions to an article comment.
 */
export const getArticlesByIdCommentsByArticleCommentIdReactions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetArticlesByIdCommentsByArticleCommentIdReactionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdCommentsByArticleCommentIdReactionsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments/{articleCommentId}/reactions",
    ...options,
  });
};

/**
 * This resource lets you work with reactions to an article comment.
 */
export const postArticlesByIdCommentsByArticleCommentIdReactions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostArticlesByIdCommentsByArticleCommentIdReactionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdCommentsByArticleCommentIdReactionsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments/{articleCommentId}/reactions",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with reactions to an article comment.
 */
export const deleteArticlesByIdCommentsByArticleCommentIdReactionsByReactionId =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteArticlesByIdCommentsByArticleCommentIdReactionsByReactionIdData,
      ThrowOnError
    >,
  ) => {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/articles/{id}/comments/{articleCommentId}/reactions/{reactionId}",
      ...options,
    });
  };

/**
 * This resource lets you work with reactions to an article comment.
 */
export const getArticlesByIdCommentsByArticleCommentIdReactionsByReactionId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetArticlesByIdCommentsByArticleCommentIdReactionsByReactionIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdCommentsByArticleCommentIdReactionsByReactionIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/comments/{articleCommentId}/reactions/{reactionId}",
    ...options,
  });
};

/**
 * This resource lets you get the parent article of the current one.
 */
export const getArticlesByIdParentArticle = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetArticlesByIdParentArticleData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdParentArticleResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/parentArticle",
    ...options,
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific article.
 */
export const getArticlesByIdTags = <ThrowOnError extends boolean = false>(
  options: Options<GetArticlesByIdTagsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/tags",
    ...options,
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific article.
 */
export const postArticlesByIdTags = <ThrowOnError extends boolean = false>(
  options: Options<PostArticlesByIdTagsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostArticlesByIdTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/tags",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific article.
 */
export const deleteArticlesByIdTagsByTagId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteArticlesByIdTagsByTagIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/tags/{tagId}",
    ...options,
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific article.
 */
export const getArticlesByIdTagsByTagId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetArticlesByIdTagsByTagIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetArticlesByIdTagsByTagIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/articles/{id}/tags/{tagId}",
    ...options,
  });
};

/**
 * This resource lets you apply commands to issues.
 */
export const postCommands = <ThrowOnError extends boolean = false>(
  options?: Options<PostCommandsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostCommandsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/commands",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * Lets you get suggestions for the currently entered command.
 */
export const postCommandsAssist = <ThrowOnError extends boolean = false>(
  options?: Options<PostCommandsAssistData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostCommandsAssistResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/commands/assist",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

export const getGroups = <ThrowOnError extends boolean = false>(
  options?: Options<GetGroupsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetGroupsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/groups",
    ...options,
  });
};

export const getGroupsById = <ThrowOnError extends boolean = false>(
  options: Options<GetGroupsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetGroupsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/groups/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with issue link types.
 */
export const getIssueLinkTypes = <ThrowOnError extends boolean = false>(
  options?: Options<GetIssueLinkTypesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetIssueLinkTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issueLinkTypes",
    ...options,
  });
};

/**
 * This resource provides operations with issue link types.
 */
export const postIssueLinkTypes = <ThrowOnError extends boolean = false>(
  options?: Options<PostIssueLinkTypesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostIssueLinkTypesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issueLinkTypes",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource provides operations with issue link types.
 */
export const deleteIssueLinkTypesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteIssueLinkTypesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issueLinkTypes/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with issue link types.
 */
export const getIssueLinkTypesById = <ThrowOnError extends boolean = false>(
  options: Options<GetIssueLinkTypesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssueLinkTypesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issueLinkTypes/{id}",
    ...options,
  });
};

/**
 * This resource provides operations with issue link types.
 */
export const postIssueLinkTypesById = <ThrowOnError extends boolean = false>(
  options: Options<PostIssueLinkTypesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssueLinkTypesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issueLinkTypes/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * Resource that provides access to issues.
 */
export const getIssues = <ThrowOnError extends boolean = false>(
  options?: Options<GetIssuesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues",
    ...options,
  });
};

/**
 * Resource that provides access to issues.
 */
export const postIssues = <ThrowOnError extends boolean = false>(
  options?: Options<PostIssuesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * Resource that provides access to issues.
 */
export const deleteIssuesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteIssuesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}",
    ...options,
  });
};

/**
 * Resource that provides access to issues.
 */
export const getIssuesById = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}",
    ...options,
  });
};

/**
 * Resource that provides access to issues.
 */
export const postIssuesById = <ThrowOnError extends boolean = false>(
  options: Options<PostIssuesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you get the history of operations for a specific issue. It provides access to the issue activities with the possibility to filter them by various parameters.
 */
export const getIssuesByIdActivities = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdActivitiesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdActivitiesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/activities",
    ...options,
  });
};

/**
 * This resource lets you get the history of operations for a specific issue. It provides access to the issue activities with the possibility to filter them by various parameters.
 */
export const getIssuesByIdActivitiesByActivityItemId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdActivitiesByActivityItemIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdActivitiesByActivityItemIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/activities/{activityItemId}",
    ...options,
  });
};

/**
 * This resource provides access to the issue activities wrapping it to the page object.
 * The main advantage of the page in comparison to a list of activities is cursors.
 * The page provides boundary marks that allows continuing iteration over the activities from the place
 * the page is finished.
 */
export const getIssuesByIdActivitiesPage = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdActivitiesPageData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdActivitiesPageResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/activitiesPage",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in the specific issue.
 */
export const getIssuesByIdAttachments = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdAttachmentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdAttachmentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/attachments",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in the specific issue.
 */
export const postIssuesByIdAttachments = <ThrowOnError extends boolean = false>(
  options: Options<PostIssuesByIdAttachmentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdAttachmentsResponse,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/attachments",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with attachments in the specific issue.
 */
export const deleteIssuesByIdAttachmentsByIssueAttachmentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteIssuesByIdAttachmentsByIssueAttachmentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/attachments/{issueAttachmentId}",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in the specific issue.
 */
export const getIssuesByIdAttachmentsByIssueAttachmentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetIssuesByIdAttachmentsByIssueAttachmentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdAttachmentsByIssueAttachmentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/attachments/{issueAttachmentId}",
    ...options,
  });
};

/**
 * This resource lets you work with attachments in the specific issue.
 */
export const postIssuesByIdAttachmentsByIssueAttachmentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostIssuesByIdAttachmentsByIssueAttachmentIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdAttachmentsByIssueAttachmentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/attachments/{issueAttachmentId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with comments of an issue.
 */
export const getIssuesByIdComments = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdCommentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdCommentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments",
    ...options,
  });
};

/**
 * This resource lets you work with comments of an issue.
 */
export const postIssuesByIdComments = <ThrowOnError extends boolean = false>(
  options: Options<PostIssuesByIdCommentsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdCommentsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with comments of an issue.
 */
export const deleteIssuesByIdCommentsByIssueCommentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteIssuesByIdCommentsByIssueCommentIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}",
    ...options,
  });
};

/**
 * This resource lets you work with comments of an issue.
 */
export const getIssuesByIdCommentsByIssueCommentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdCommentsByIssueCommentIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdCommentsByIssueCommentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}",
    ...options,
  });
};

/**
 * This resource lets you work with comments of an issue.
 */
export const postIssuesByIdCommentsByIssueCommentId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostIssuesByIdCommentsByIssueCommentIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdCommentsByIssueCommentIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with reactions to an issue comment.
 */
export const getIssuesByIdCommentsByIssueCommentIdReactions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetIssuesByIdCommentsByIssueCommentIdReactionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdCommentsByIssueCommentIdReactionsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}/reactions",
    ...options,
  });
};

/**
 * This resource lets you work with reactions to an issue comment.
 */
export const postIssuesByIdCommentsByIssueCommentIdReactions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostIssuesByIdCommentsByIssueCommentIdReactionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdCommentsByIssueCommentIdReactionsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}/reactions",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with reactions to an issue comment.
 */
export const deleteIssuesByIdCommentsByIssueCommentIdReactionsByReactionId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteIssuesByIdCommentsByIssueCommentIdReactionsByReactionIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}/reactions/{reactionId}",
    ...options,
  });
};

/**
 * This resource lets you work with reactions to an issue comment.
 */
export const getIssuesByIdCommentsByIssueCommentIdReactionsByReactionId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetIssuesByIdCommentsByIssueCommentIdReactionsByReactionIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdCommentsByIssueCommentIdReactionsByReactionIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/comments/{issueCommentId}/reactions/{reactionId}",
    ...options,
  });
};

/**
 * This resource lets you work with custom fields of the issue.
 */
export const getIssuesByIdCustomFields = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdCustomFieldsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdCustomFieldsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/customFields",
    ...options,
  });
};

/**
 * This resource lets you work with custom fields of the issue.
 */
export const getIssuesByIdCustomFieldsByIssueCustomFieldId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetIssuesByIdCustomFieldsByIssueCustomFieldIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdCustomFieldsByIssueCustomFieldIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/customFields/{issueCustomFieldId}",
    ...options,
  });
};

/**
 * This resource lets you work with custom fields of the issue.
 */
export const postIssuesByIdCustomFieldsByIssueCustomFieldId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostIssuesByIdCustomFieldsByIssueCustomFieldIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdCustomFieldsByIssueCustomFieldIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/customFields/{issueCustomFieldId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read links of the issue.
 */
export const getIssuesByIdLinks = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdLinksData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdLinksResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/links",
    ...options,
  });
};

/**
 * This resource lets you read links of the issue.
 */
export const getIssuesByIdLinksByIssueLinkId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdLinksByIssueLinkIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdLinksByIssueLinkIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/links/{issueLinkId}",
    ...options,
  });
};

/**
 * This resource lets you read, add, and remove links to other issues for the current one.
 */
export const getIssuesByIdLinksByIssueLinkIdIssues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdLinksByIssueLinkIdIssuesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdLinksByIssueLinkIdIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/links/{issueLinkId}/issues",
    ...options,
  });
};

/**
 * This resource lets you read, add, and remove links to other issues for the current one.
 */
export const postIssuesByIdLinksByIssueLinkIdIssues = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostIssuesByIdLinksByIssueLinkIdIssuesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdLinksByIssueLinkIdIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/links/{issueLinkId}/issues",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read, add, and remove links to other issues for the current one.
 */
export const deleteIssuesByIdLinksByIssueLinkIdIssuesByIssueId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteIssuesByIdLinksByIssueLinkIdIssuesByIssueIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/links/{issueLinkId}/issues/{issueId}",
    ...options,
  });
};

/**
 * This resource lets you read the project where the issue belongs, and move the issue to another project.
 */
export const getIssuesByIdProject = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdProjectResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/project",
    ...options,
  });
};

/**
 * This resource lets you read the project where the issue belongs, and move the issue to another project.
 */
export const postIssuesByIdProject = <ThrowOnError extends boolean = false>(
  options: Options<PostIssuesByIdProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdProjectResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/project",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the sprints where the issue belongs.
 */
export const getIssuesByIdSprints = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdSprintsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdSprintsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/sprints",
    ...options,
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific issue.
 */
export const getIssuesByIdTags = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdTagsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/tags",
    ...options,
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific issue.
 */
export const postIssuesByIdTags = <ThrowOnError extends boolean = false>(
  options: Options<PostIssuesByIdTagsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/tags",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific issue.
 */
export const deleteIssuesByIdTagsByTagId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteIssuesByIdTagsByTagIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/tags/{tagId}",
    ...options,
  });
};

/**
 * This sub-resource lets you work with the tags that are added to the specific issue.
 */
export const getIssuesByIdTagsByTagId = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdTagsByTagIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdTagsByTagIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/tags/{tagId}",
    ...options,
  });
};

/**
 * This sub-resource lets you read work items of an issue and time tracking status in the issue's project.
 */
export const getIssuesByIdTimeTracking = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdTimeTrackingData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdTimeTrackingResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/timeTracking",
    ...options,
  });
};

/**
 * This resource lets you work with work items in the specific issue.
 */
export const getIssuesByIdTimeTrackingWorkItems = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdTimeTrackingWorkItemsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdTimeTrackingWorkItemsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/timeTracking/workItems",
    ...options,
  });
};

/**
 * This resource lets you work with work items in the specific issue.
 */
export const postIssuesByIdTimeTrackingWorkItems = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostIssuesByIdTimeTrackingWorkItemsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdTimeTrackingWorkItemsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/timeTracking/workItems",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with work items in the specific issue.
 */
export const deleteIssuesByIdTimeTrackingWorkItemsByIssueWorkItemId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/timeTracking/workItems/{issueWorkItemId}",
    ...options,
  });
};

/**
 * This resource lets you work with work items in the specific issue.
 */
export const getIssuesByIdTimeTrackingWorkItemsByIssueWorkItemId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/timeTracking/workItems/{issueWorkItemId}",
    ...options,
  });
};

/**
 * This resource lets you work with work items in the specific issue.
 */
export const postIssuesByIdTimeTrackingWorkItemsByIssueWorkItemId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdTimeTrackingWorkItemsByIssueWorkItemIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/timeTracking/workItems/{issueWorkItemId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the VCS changes linked to an issue.
 */
export const getIssuesByIdVcsChanges = <ThrowOnError extends boolean = false>(
  options: Options<GetIssuesByIdVcsChangesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdVcsChangesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/vcsChanges",
    ...options,
  });
};

/**
 * This resource lets you work with the VCS changes linked to an issue.
 */
export const postIssuesByIdVcsChanges = <ThrowOnError extends boolean = false>(
  options: Options<PostIssuesByIdVcsChangesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdVcsChangesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/vcsChanges",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you work with the VCS changes linked to an issue.
 */
export const deleteIssuesByIdVcsChangesByVcsChangeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteIssuesByIdVcsChangesByVcsChangeIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/vcsChanges/{vcsChangeId}",
    ...options,
  });
};

/**
 * This resource lets you work with the VCS changes linked to an issue.
 */
export const getIssuesByIdVcsChangesByVcsChangeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetIssuesByIdVcsChangesByVcsChangeIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetIssuesByIdVcsChangesByVcsChangeIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/vcsChanges/{vcsChangeId}",
    ...options,
  });
};

/**
 * This resource lets you work with the VCS changes linked to an issue.
 */
export const postIssuesByIdVcsChangesByVcsChangeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostIssuesByIdVcsChangesByVcsChangeIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostIssuesByIdVcsChangesByVcsChangeIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issues/{id}/vcsChanges/{vcsChangeId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you get the number of issues returned by a search.
 */
export const postIssuesGetterCount = <ThrowOnError extends boolean = false>(
  options?: Options<PostIssuesGetterCountData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostIssuesGetterCountResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/issuesGetter/count",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access and work with saved searches in YouTrack.
 */
export const getSavedQueries = <ThrowOnError extends boolean = false>(
  options?: Options<GetSavedQueriesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetSavedQueriesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/savedQueries",
    ...options,
  });
};

/**
 * This resource lets you access and work with saved searches in YouTrack.
 */
export const postSavedQueries = <ThrowOnError extends boolean = false>(
  options?: Options<PostSavedQueriesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostSavedQueriesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/savedQueries",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access and work with saved searches in YouTrack.
 */
export const deleteSavedQueriesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteSavedQueriesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/savedQueries/{id}",
    ...options,
  });
};

/**
 * This resource lets you access and work with saved searches in YouTrack.
 */
export const getSavedQueriesById = <ThrowOnError extends boolean = false>(
  options: Options<GetSavedQueriesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetSavedQueriesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/savedQueries/{id}",
    ...options,
  });
};

/**
 * This resource lets you access and work with saved searches in YouTrack.
 */
export const postSavedQueriesById = <ThrowOnError extends boolean = false>(
  options: Options<PostSavedQueriesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostSavedQueriesByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/savedQueries/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * Lets you get suggestions for the currently entered search query.
 */
export const postSearchAssist = <ThrowOnError extends boolean = false>(
  options?: Options<PostSearchAssistData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostSearchAssistResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/search/assist",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access and work with tags in YouTrack.
 */
export const getTags = <ThrowOnError extends boolean = false>(
  options?: Options<GetTagsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/tags",
    ...options,
  });
};

/**
 * This resource lets you access and work with tags in YouTrack.
 */
export const postTags = <ThrowOnError extends boolean = false>(
  options?: Options<PostTagsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/tags",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you access and work with tags in YouTrack.
 */
export const deleteTagsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteTagsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/tags/{id}",
    ...options,
  });
};

/**
 * This resource lets you access and work with tags in YouTrack.
 */
export const getTagsById = <ThrowOnError extends boolean = false>(
  options: Options<GetTagsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetTagsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/tags/{id}",
    ...options,
  });
};

/**
 * This resource lets you access and work with tags in YouTrack.
 */
export const postTagsById = <ThrowOnError extends boolean = false>(
  options: Options<PostTagsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostTagsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/tags/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * <p>This resource lets you get a list of issues that the specific tag is added to.</p><list><li>The default issue sorting is `sort by: updated desc`.</li><li>If you don't provide the `$top` parameter, the number of returned issues is limited to the <b>Max issues to export</b> value in the Global Settings of your YouTrack.</li></list>
 */
export const getTagsByIdIssues = <ThrowOnError extends boolean = false>(
  options: Options<GetTagsByIdIssuesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetTagsByIdIssuesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/tags/{id}/issues",
    ...options,
  });
};

export const getUsers = <ThrowOnError extends boolean = false>(
  options?: Options<GetUsersData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUsersResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users",
    ...options,
  });
};

export const getUsersById = <ThrowOnError extends boolean = false>(
  options: Options<GetUsersByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUsersByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}",
    ...options,
  });
};

/**
 * This resource lets you read and update general settings in the YouTrack profile of the specified user.
 */
export const getUsersByIdProfilesGeneral = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUsersByIdProfilesGeneralData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUsersByIdProfilesGeneralResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/profiles/general",
    ...options,
  });
};

/**
 * This resource lets you read and update general settings in the YouTrack profile of the specified user.
 */
export const postUsersByIdProfilesGeneral = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostUsersByIdProfilesGeneralData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostUsersByIdProfilesGeneralResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/profiles/general",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you read and update notification settings in the profile of the specific user.
 */
export const getUsersByIdProfilesNotifications = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUsersByIdProfilesNotificationsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUsersByIdProfilesNotificationsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/profiles/notifications",
    ...options,
  });
};

/**
 * This resource lets you read and update notification settings in the profile of the specific user.
 */
export const postUsersByIdProfilesNotifications = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostUsersByIdProfilesNotificationsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostUsersByIdProfilesNotificationsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/profiles/notifications",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you configure the time tracking settings in the user's profile.
 */
export const getUsersByIdProfilesTimetracking = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUsersByIdProfilesTimetrackingData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUsersByIdProfilesTimetrackingResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/profiles/timetracking",
    ...options,
  });
};

/**
 * This resource lets you configure the time tracking settings in the user's profile.
 */
export const postUsersByIdProfilesTimetracking = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostUsersByIdProfilesTimetrackingData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostUsersByIdProfilesTimetrackingResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/profiles/timetracking",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * This resource lets you get the list of saved searches that the specific user created.
 */
export const getUsersByIdSavedQueries = <ThrowOnError extends boolean = false>(
  options: Options<GetUsersByIdSavedQueriesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUsersByIdSavedQueriesResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/savedQueries",
    ...options,
  });
};

/**
 * This resource lets you work with tags that belong to specific user.
 */
export const getUsersByIdTags = <ThrowOnError extends boolean = false>(
  options: Options<GetUsersByIdTagsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUsersByIdTagsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/{id}/tags",
    ...options,
  });
};

/**
 * This resource lets you read the settings of your account and your own profile in YouTrack.
 */
export const getUsersMe = <ThrowOnError extends boolean = false>(
  options?: Options<GetUsersMeData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUsersMeResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/users/me",
    ...options,
  });
};

/**
 * Resource that provides access to work items.
 */
export const getWorkItems = <ThrowOnError extends boolean = false>(
  options?: Options<GetWorkItemsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetWorkItemsResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/workItems",
    ...options,
  });
};

/**
 * Resource that provides access to work items.
 */
export const getWorkItemsById = <ThrowOnError extends boolean = false>(
  options: Options<GetWorkItemsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetWorkItemsByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/workItems/{id}",
    ...options,
  });
};
